pipeline {
     agent any
     stages {
         stage('Message') {
             steps {
                 sh 'echo "Starting build to EKS"'
             }
         }
stage ("lint dockerfile") {
    agent {
        docker {
            image 'hadolint/hadolint:latest-debian'
        }
    }
    steps {
        sh 'hadolint 2-Build_and_Deploy/Dockerfile | tee -a hadolint_lint.txt'
    }
    post {
        always {
            archiveArtifacts 'hadolint_lint.txt'
        }
    }
}
 stage('Build docker image') {
            steps {
                script {
                    image = docker.build("msoulie/capstone-project", "-f Dockerfile")
                }
            }
        }
      stage('Security Scan') {
              steps { 
                 aquaMicroscanner imageName: 'msoulie/capstone-project:latest', notCompliesCmd: 'exit 1', onDisallowed: 'fail', outputFormat: 'html'
              }
         }       
     stage('Push Image To Dockerhub') {
			steps {
				withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'dockerhub-cr', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD']]){
					sh '''
						docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
						docker push msoulie/capstone-project:latest
					'''
				}
			}

             }
     }
 }