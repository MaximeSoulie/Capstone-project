Description: >
    Maxime Soulie - 2020
    Deploy a Jenkins Server using Cloudformation.

Parameters:
  EnvironmentName:
    Description: 'Environment name, used as a prefix for resources'
    Type: String
  WhitelistedIP:
    Description: Whitelisted IP for SSH connection
    Type: String
  KeyPair:
    Description: KeyPair name to access host via SSH
    Type: 'AWS::EC2::KeyPair::KeyName'
    Default: udabuntu

Resources:
  JenkinsEC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: ami-06e54d05255faf8f6 
      InstanceType: t2.micro
      SecurityGroupIds:
        - Ref: JenkinsSecurityGroup
      KeyName: !Sub '${KeyPair}'
      UserData:
        Fn::Base64: !Sub |
          #!/usr/bin/env bash
          sudo apt update
          sudo apt upgrade -y
          wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -
          sudo sh -c 'echo deb http://pkg.jenkins.io/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'
          sudo apt install openjdk-8-jdk jenkins wget awscli docker.io -y
          curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
          sudo mv /tmp/eksctl /usr/local/bin
          curl -o kubectl curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.18.8/2020-09-18/bin/linux/amd64/kubectl
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin

          

  JenkinsSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Allow SSH access via port 22 and Jenkins on port 8080
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Sub '${WhitelistedIP}'
        - IpProtocol: tcp
          FromPort: '8080'
          ToPort: '8080'
          CidrIp: !Sub '${WhitelistedIP}'
Outputs:
  Website:
    Description: Public DNS of EC2 Instance
    Value: !Join ['', ['http://', !GetAtt 'JenkinsEC2Instance.PublicDnsName', ':8080']]
